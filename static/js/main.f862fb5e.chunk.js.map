{"version":3,"sources":["serviceWorker.js","js/closetItems.js","components/Items.js","utilities.js","components/Main.js","components/CartObject.js","components/Nav.js","components/Inventory.js","components/Admin.js","components/NotFound.js","components/CartPage.js","index.js"],"names":["Boolean","window","location","hostname","match","Items","state","items","fetch","this","props","result","json","setState","fetchItems","react_default","a","createElement","Fragment","className","map","item","key","id","src","image","name","price","toLocaleString","style","currency","Component","Main","components_Items","data-url","CartObject","Nav","react_router_dom","to","components_CartObject","Inventory","inventory","fetchInventory","inventoryItem","type","value","readOnly","alt","Admin","components_Inventory","NotFound","CartPage","render","basename","process","components_Nav","react_router","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f862fb5e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const closetItems = {\n\titem1: {\n\t\tname: 'Adidas Skateboarding Sneaker',\n\t\timage: '.../img/adidas_skateboarding_sneaker.jpeg',\n\t\tprice: 5000,\n\t\tstatus: 'active'\n\t},\n\titem2: {\n\t\tname: 'Cherub Button Down',\n\t\timage: '.../img/cherub_button_down.jpeg',\n\t\tprice: 3500,\n\t\tstatus: 'active'\n\t},\n\titem3: {\n\t\tname: 'Hellcat Tee',\n\t\timage: '.../img/hellcat_tee.jpeg',\n\t\tprice: 1500,\n\t\tstatus: 'active'\n\t},\n\titem4: {\n\t\tname: 'High Art Button Down',\n\t\timage: '.../img/high_art_button_down.jpeg',\n\t\tprice: 3500,\n\t\tstatus: 'active'\n\t},\n\titem5: {\n\t\tname: 'Ikat Button Down',\n\t\timage: '.../img/ikat_button_down.jpeg',\n\t\tprice: 3500,\n\t\tstatus: 'active'\n\t},\n\titem6: {\n\t\tname: 'Moto Cab Slide Sandal',\n\t\timage: '.../img/moto_cab_slide_sandal.jpeg',\n\t\tprice: 3500,\n\t\tstatus: 'active'\n\t},\n\titem7: {\n\t\tname: 'Oscar Track Pant',\n\t\timage: '.../img/oscar_track_pant.jpeg',\n\t\tprice: 4500,\n\t\tstatus: 'active'\n\t},\n\titem8: {\n\t\tname: 'Patagonia Baggies',\n\t\timage: '.../img/patagonia_baggies.jpeg',\n\t\tprice: 3500,\n\t\tstatus: 'active'\n\t},\n\titem9: {\n\t\tname: 'Tie-Dye Seersucker Short',\n\t\timage: '.../img/tie_dye_seersucker_short.jpeg',\n\t\tprice: 2500,\n\t\tstatus: 'active'\n\t},\n\titem10: {\n\t\tname: 'Vans Espadrille Sneaker',\n\t\timage: '.../img/vans_espadrille_sneaker.jpeg',\n\t\tprice: 5000,\n\t\tstatus: 'active'\n\t},\n\titem11: {\n\t\tname: 'Lazy Oaf Trousers',\n\t\timage: '.../img/lazy_oaf_trouser.jpeg',\n\t\tprice: 5500,\n\t\tstatus: 'active'\n\t},\n\titem12: {\n\t\tname: 'Converse One Star Sneaker',\n\t\timage: '.../img/converse_one_star.jpeg',\n\t\tprice: 4500,\n\t\tstatus: 'active'\n\t}\n}\n\nexport default closetItems;","import React, { Component } from 'react';\nimport { formatPrice } from '../utilities';\nimport closetItems from '../js/closetItems'\n\nclass Items extends Component {\n\n  //  state = {\n  //       closetItems: []\n  //      }\n\n  //     loadItems = () => {\n  //       this.setState({ closetItems });\n  //     };\n\n  //    componentDidMount() {\n  //       this.loadItems();\n  //   }\n\n    state = {\n      items: []\n    }\n\n    async fetchItems() {\n      const result = await fetch(this.props['data-url']);\n      const items = await result.json();\n      this.setState({ items });\n    }\n\n  componentDidMount() {\n      this.fetchItems();\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <div className=\"items-container\">\n            {this.state.items.map(item => (\n              <div key={item.id} className=\"items\">\n                <img src={item.image}></img>\n                <p>{item.name}</p>\n                <p>{formatPrice(item.price)}</p>\n              </div>\n            ))}\n\n            {/* {Object.keys(this.state.closetItems).map(key => (\n              <closetItems key={key} details={this.state.closetItems[key]} />\n            ))} */}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Items;","export function formatPrice(cents) {\n    return (cents / 100).toLocaleString('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    });\n  }","import React, { Component } from 'react';\nimport Items from './Items';\n\nconst dataUrl = './store-items.json';\n\nclass Main extends Component {\n\n  render() {\n    return (\n        <React.Fragment>\n            <Items data-url={dataUrl} />\n        </React.Fragment>\n      \n    );\n  }\n}\n\nexport default Main;","import React, { Component } from 'react';\n\nclass CartObject extends Component {\n\n  render() {\n    return (\n      <div className=\"cartObject-container\">\n        <img src=\"./img/cart.png\"></img>\n    </div>\n    );\n  }\n}\n\nexport default CartObject;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Link, Switch } from 'react-router-dom';\nimport CartObject from './CartObject';\n\nclass Nav extends Component {\n\n  render() {\n    return (\n    <React.Fragment>\n      <div className=\"menu-container\">\n              <Link to=\"/\"><h1>THE CLOSET</h1></Link>\n              <Link to=\"/admin\"><h3>ADMIN</h3></Link>\n              <Link to=\"/cart\"><CartObject /></Link>\n      </div>\n    </React.Fragment>\n\n    );\n  }\n}\n\nexport default Nav;","import React, { Component } from 'react';\n\nclass Inventory extends Component {\n  state = {\n    inventory: []\n  };\n\n  async fetchInventory() {\n    const result = await fetch(this.props['data-url']);\n    const inventory = await result.json();\n    this.setState({ inventory });\n  }\n\n  componentDidMount() {\n    this.fetchInventory();\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"inventory-container\">\n          {this.state.inventory.map(inventoryItem => (\n            <form key={inventoryItem.id} className=\"indiv-inventory-form\">\n              <input\n                type=\"text\"\n                name=\"inventoryItemID\"\n                value={inventoryItem.id}\n                readOnly\n              />\n              <img src={inventoryItem.image} alt=\"alt\" />\n              <input\n                type=\"text\"\n                name=\"inventoryItemImage\"\n                value={inventoryItem.image}\n                readOnly\n              />\n              <input\n                type=\"text\"\n                name=\"inventoryItemName\"\n                value={inventoryItem.name}\n                readOnly\n              />\n              <input\n                type=\"text\"\n                name=\"inventoryItemPrice\"\n                value={inventoryItem.price}\n                readOnly\n              />\n            </form>\n          ))}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Inventory;\n","import React, { Component } from 'react';\nimport Inventory from './Inventory';\n\nconst dataUrl = './store-items.json';\n\nclass Admin extends Component {\n  render() {\n    return (\n      <div className=\"admin-container\">\n        <Inventory data-url={dataUrl} />\n      </div>\n    );\n  }\n}\n\nexport default Admin;\n","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found</h2>\n  </div>\n);\n\nexport default NotFound;","import React, { Component } from 'react';\n\nclass CartPage extends Component {\n\n  render() {\n    return (\n      <div className=\"cartPage-container\">\n        cart\n      </div>\n    );\n  }\n}\n\nexport default CartPage;","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router, Route, Link, Switch } from 'react-router-dom';\nimport Main from './components/Main';\nimport Nav from './components/Nav'\nimport Admin from './components/Admin';\nimport NotFound from './components/NotFound';\nimport CartObject from './components/CartObject';\nimport CartPage from './components/CartPage';\n\n\n// const dataUrl = './store-items.json';\n\n  render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <React.Fragment>\n      <Nav />\n    </React.Fragment>\n\n  <Switch>\n      <Route exact path=\"/\" component={Main} />\n      <Route path=\"/admin\" component={Admin} />\n      <Route path=\"/cart\" component={CartPage} />\n      <Route component={NotFound} />\n  </Switch>\n</Router>,\n    document.getElementById('app')\n  );\n\nserviceWorker.unregister();\n"],"sourceRoot":""}